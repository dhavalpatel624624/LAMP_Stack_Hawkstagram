Packer Setup and Installation:
1. Navigate into the install folder cloned from the GitHub repository
2. From Powershell use command: packer build ubuntu14045-slave
3. Wait for install to finish
4. Add the box using command: vagrant box add packer_output.box --name boxname, call the box slave and add the correct box 
3. Make new folder in the install directory called slave
4. Navigate in Powershell into that folder
5. Vagrant init slave
6. Edit vagrant file (make sure you have our bootstrap.sh file in this folder)

notepad Vagrantfile

Vagrant.configure("2") do |config|
  config.vm.box = "slave"
  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.network :forwarded_port, guest: 80, host: 4567


  config.vm.network "public_network", ip: "Whatever your slave IP is"

Vagrant up

Vagrant ssh

Now we will leave this powershell window open and open another to go to our original database vagrant box which will be our master database.

After you have ssh'd into the master database vagrant box we will edit the mysql conf file in it.

sudo vim /etc/mysql/my.cnf

bind-address = same IP for main database vagrant box
server-id = 1
log_bin = /var/log/mysql/mysql-bin.log
bindlog_do_db = hawkstagram

Save file

Login to main database:
mysql -u root -p

GRANT REPLICATION SLAVE ON *.* TO 'dbuser' IDENTIFIED BY 'hawkstagram123';
FLUSH PRIVILEGES;
SHOW MASTER STATUS;

example:
+------------------+----------+--------------+------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------+----------+--------------+------------------+
| mysql-bin.000001 |      107 | newdatabase  |                  |
+------------------+----------+--------------+------------------+
1 row in set (0.00 sec)

mysql-bin.000001	577 hawkstagram

Write down the mysql-bin and position number

This next step is just to make a copy of the master database file since both slave and master databases should be identical before they could sync. This step could be skipped if your using the same sql file and never edited it. 

Open a new powershell and vagrant ssh into the same box and mysql
run command
mysqldump -u root -p --opt newdatabase > newdatabase.sql

UNLOCK TABLES;

QUIT;

CONFIGURING SLAVE STEPS

Go to your back slave vagrant box:

Make the database using either a copy you made or the .sql file downloaded from our github.
mysql -u root -p hawkstagram < hawkstagram.sql

Configure slave conf file:

Edit/uncomment:

server-id = 2

log_bin = /var/log/mysql/mysql-bin.log

binglog_do_db = hawkstagram

Make a new line with:

relay-log = /var/log/mysql/mysql-relay-bin.log

Save file and restart MySQL:

sudo service mysql restart

Go back into mysql:

mysql -u root -p

CHANGE MASTER TO MASTER_HOST='Your MASTER IP',
MASTER_USER='dbuser', 
MASTER_PASSWORD='hawkstagram123', 
MASTER_LOG_FILE='mysql-bin.000001',(Your bin from earlier) 
MASTER_LOG_POS=  107; (Your pos number from earlier)

START SLAVE;

RESET SLAVE;

Now make an edit on the master database such as inserting a new user

INSERT INTO users (username, email, salted_password, first_name, last_name, date_created, date_updated)
VALUES ('Toad', 'toad@hawk.iit.edu', 'password', 'Toad', 'Toad', NOW(), NOW());

Now on the SLAVE database:

SELECT * FROM users; 

It should show the newly added user.

This command will show the status of the slave:
SHOW SLAVE STATUS\G 

The top should say "Waiting for master to send event." and

Slave_IO_Running: YES 
Slave_SQL_Running: YES

SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1;
SLAVE START;

POSSIBLE FIXES FOR PROBLEMS:

edit the owernship of the mysql log files

restart both mysql servers and stop and reset slave

